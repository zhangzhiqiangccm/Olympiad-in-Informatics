一种贪心思想：将所有的木板按照p关键字从小到大排序。
首先选择第一块木板。
以后，每次选择这样一块木板：它能够放进去，并且放进去之后这块木板最右边最靠左。
注意，如果有两块木板放进去之后都是最靠左的，那么选择p值小的那个放入。这个需要注意。
按照这种思想可以得到一个n^2的算法。
将前一块木板最右边的位置记为pre，
那么之后每块木板的属性就是max{pre + l[i],p[i]},并且要使得p[i]大于上一块木板的p值。
注意这个max函数只增不减，那么维护两个堆，第一个维护p为最大值的时候的木板，第二个维护
pre + l[i]为最大值时候的木板。每次从两个堆中挑选一个最优的加入答案，并更新pre。
有两个问题要注意，第一个就是贪心思想中，最靠左的有多个的时候的选取方案，还有就是
第一个堆中的木板要不时被移动到第二个堆里面去。因为pre只增不减。


